name: openwrt

on:
  repository_dispatch:
  workflow_dispatch:

    inputs:
      OP_IP:
        description: '静态IP地址'     
        required: false
        default: '192.168.2.1' 
        type: string

      OP_author:
        description: '定制作者'     
        required: false
        default: 'shiyu1314' 
        type: string    

      CUSTOM_PLUGINS:
        description: '自定义插件名称，用空格分隔'
        required: false
        default: 'luci-theme-material3 luci-app-ttyd luci-app-diskman luci-app-hd-idle luci-app-momo luci-app-samba4 luci-app-openlist2 luci-app-mtwifi-cfg luci-app-turboacc-mtk luci-app-eqos-mtk'
        type: string

env:
  DIY_P1_SH: sh/op.sh

jobs:
  build_firmware:
    name: 编译固件
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        repo_info:
          - {branch: "openwrt-24.10-6.6"}


    steps: 
    - name: 检查分支
      uses: actions/checkout@v4

    - name: 释放磁盘空间
      run: |
        sudo rm -rf /etc/apt/sources.list.d
        sudo swapoff -a
        sudo rm -f /swapfile /mnt/swapfile
        sudo docker image prune -a -f
        sudo systemctl stop docker
        sudo snap set system refresh.retain=2
        sudo apt-get -y purge firefox clang* ghc* google* llvm* mono* mongo* mysql* php*
        sudo apt-get -y autoremove --purge
        sudo apt-get clean
        sudo rm -rf /etc/mysql /etc/php /usr/lib/jvm /usr/libexec/docker /usr/local /usr/src/* /var/lib/docker /var/lib/gems /var/lib/mysql /var/lib/snapd /etc/skel /opt/{microsoft,az,hostedtoolcache,cni,mssql-tools,pipx} /usr/share/{az*,dotnet,swift,miniconda,gradle*,java,kotlinc,ri,sbt} /root/{.sbt,.local,.npm}
        sudo sed -i '/NVM_DIR/d;/skel/d' /root/{.bashrc,.profile}
        rm -rf ~/{.cargo,.dotnet,.rustup}
        df -Th

    - name: 编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update
        sudo apt-get install -y tar img2simg build-essential flex bison cmake g++ gawk gcc-multilib g++-multilib gettext git libfuse-dev libncurses5-dev libssl-dev python3 python3-pip python3-ply python3-distutils python3-pyelftools rsync unzip zlib1g-dev file wget subversion patch upx-ucl autoconf automake curl asciidoc binutils bzip2 lib32gcc-s1 libc6-dev-i386 uglifyjs msmtp texinfo libreadline-dev libglib2.0-dev xmlto libelf-dev libtool autopoint antlr3 gperf ccache swig coreutils haveged scons libpython3-dev rename qemu-utils perl libperl-dev
        sudo apt-get clean
        git config --global user.name 'GitHub Actions' && git config --global user.email 'noreply@github.com'
        sudo timedatectl set-timezone 'Asia/Shanghai'
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        df -Th

    - name: 设置环境变量
      run: |
        TAG="$(date +'%Y%m%d')-$(openssl rand -hex 3)"
        echo "tag=$TAG" >> $GITHUB_ENV
        echo "REPO_URL=https://github.com/padavanonly/immortalwrt-mt798x-6.6" >> $GITHUB_ENV
        echo "REPO_BRANCH=${{ matrix.repo_info.branch }}" >> $GITHUB_ENV
        echo "OP_IP=${{ github.event.inputs.OP_IP }}" >> $GITHUB_ENV
        echo "OP_author=${{ github.event.inputs.OP_author }}" >> $GITHUB_ENV
        echo "CUSTOM_PLUGINS=${{ github.event.inputs.CUSTOM_PLUGINS }}" >> $GITHUB_ENV
        
    - name: 克隆源代码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        
        
    - name: 取回缓存 staging_dir
      uses: actions/cache@v4
      with:
        path: |
          openwrt/staging_dir
        key: ${{ matrix.repo_info.branch }}-toolchain-cache
        restore-keys: |
          ${{ matrix.repo_info.branch }}-toolchain-cache
          
    - name: patch修补
      run: |
        set -x
        [ -e patch ] && cp -rf patch/target openwrt
        [ -e patch ] && cp -rf patch/diy/turboacc openwrt/package/mtk/applications/luci-app-turboacc-mtk/root/etc/config
        rm -rf openwrt/package/mtk/applications/luci-app-mtwifi-cfg
        [ -e patch ] && cp -rf patch/luci-app-mtwifi-cfg openwrt/package/mtk/applications
        [ -e patch ] && cp -rf patch/default-settings openwrt/package/emortal
        [ -e patch ] && cp -rf patch/diy/cpuinfo openwrt/package/emortal/autocore/files/generic
        [ -e patch ] && cp -rf patch/diy/tempinfo openwrt/package/emortal/autocore/files/arm
        [ -e patch ] && cp -rf patch/diy/netsupport.mk openwrt/package/kernel/linux/modules
        cd openwrt
        find ./staging_dir/ -name '*' -exec touch {} \; >/dev/null 2>&1
        ./scripts/feeds update -a
        cd .. 
        [ -e patch ] && cp -rf patch/firewall4/100-openwrt-firewall4-add-custom-nft-command-support.patch openwrt
        [ -e patch ] && cp -rf patch/firewall4/luci-24.10/*.patch openwrt/feeds/luci  
        [ -e patch ] && cp -rf patch/luci/*.patch openwrt/feeds/luci 
        [ -e patch ] && cp -rf patch/openssl/quic/*.patch openwrt/package/libs/openssl/patches
        [ -e patch ] && cp -rf patch/kernel-6.6/bbr3/*.patch openwrt
        
    - name: 加载自定义脚本
      run: |
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH
        cd ..
        [ -e patch ] && cp -rf patch/nginx/luci.locations openwrt/feeds/packages/net/nginx/files-luci-support
        [ -e patch ] && cp -rf patch/nginx/openwrt-24.10-uci.conf.template openwrt/feeds/packages/net/nginx-util/files
                     
    - name: 加载自定义配置
      run: |
        [ -e files ] && mv files openwrt/files
        cat <<EOF >>openwrt/.config
        CONFIG_TARGET_mediatek=y
        CONFIG_TARGET_mediatek_filogic=y
        CONFIG_TARGET_MULTI_PROFILE=y
        CONFIG_TARGET_mediatek_filogic_DEVICE_cmcc_rax3000m-emmc=y
        CONFIG_DEVEL=y
        CONFIG_TOOLCHAINOPTS=y
        CONFIG_BUSYBOX_CUSTOM=y
        CONFIG_TARGET_PER_DEVICE_ROOTFS=y
        CONFIG_AFALG_UPDATE_CTR_IV=y
        CONFIG_BUSYBOX_CONFIG_BLKID=y
        CONFIG_BUSYBOX_CONFIG_FEATURE_BLKID_TYPE=y
        CONFIG_BUSYBOX_CONFIG_VOLUMEID=y
        CONFIG_CONNINFRA_AUTO_UP=y
        CONFIG_CONNINFRA_EMI_SUPPORT=y
        # CONFIG_GDB is not set
        CONFIG_INCLUDE_CONFIG=y
        CONFIG_JSON_OVERVIEW_IMAGE_INFO=y
        # CONFIG_KERNEL_BLK_DEV_THROTTLING is not set
        # CONFIG_KERNEL_CFS_BANDWIDTH is not set
        CONFIG_KERNEL_CGROUP_DEVICE=y
        CONFIG_KERNEL_CGROUP_FREEZER=y
        CONFIG_KERNEL_DEVMEM=y
        # CONFIG_KERNEL_KEYS is not set
        # CONFIG_KERNEL_MEMCG_SWAP is not set
        CONFIG_KERNEL_NET_CLS_CGROUP=y
        CONFIG_MTK_ACK_CTS_TIMEOUT_SUPPORT=y
        CONFIG_MTK_AIR_MONITOR=y
        CONFIG_MTK_AMPDU_CONF_SUPPORT=y
        CONFIG_MTK_ANTENNA_CONTROL_SUPPORT=y
        CONFIG_MTK_APCLI_SUPPORT=y
        CONFIG_MTK_ATE_SUPPORT=y
        CONFIG_MTK_BACKGROUND_SCAN_SUPPORT=y
        CONFIG_MTK_CAL_BIN_FILE_SUPPORT=y
        CONFIG_MTK_CFG_SUPPORT_FALCON_MURU=y
        CONFIG_MTK_CFG_SUPPORT_FALCON_PP=y
        CONFIG_MTK_CFG_SUPPORT_FALCON_SR=y
        CONFIG_MTK_CFG_SUPPORT_FALCON_TXCMD_DBG=y
        CONFIG_MTK_CHIP_MT7981=y
        CONFIG_MTK_CONNINFRA_APSOC=y
        CONFIG_MTK_CONNINFRA_APSOC_MT7981=y
        CONFIG_MTK_CON_WPS_SUPPORT=y
        CONFIG_MTK_DBDC_MODE=y
        CONFIG_MTK_DOT11K_RRM_SUPPORT=y
        CONFIG_MTK_DOT11R_FT_SUPPORT=y
        CONFIG_MTK_DOT11W_PMF_SUPPORT=y
        CONFIG_MTK_DOT11_HE_AX=y
        CONFIG_MTK_DOT11_N_SUPPORT=y
        CONFIG_MTK_DOT11_VHT_AC=y
        CONFIG_MTK_FAST_NAT_SUPPORT=y
        CONFIG_MTK_FIRST_IF_EEPROM_FLASH=y
        CONFIG_MTK_FIRST_IF_IPAILNA=y
        CONFIG_MTK_FIRST_IF_MT7981=y
        CONFIG_MTK_GREENAP_SUPPORT=y
        CONFIG_MTK_G_BAND_256QAM_SUPPORT=y
        CONFIG_MTK_HDR_TRANS_RX_SUPPORT=y
        CONFIG_MTK_HDR_TRANS_TX_SUPPORT=y
        CONFIG_MTK_ICAP_SUPPORT=y
        CONFIG_MTK_IGMP_SNOOP_SUPPORT=y
        CONFIG_MTK_INTERWORKING=y
        CONFIG_MTK_BAND_STEERING=y
        CONFIG_MTK_MAP_SUPPORT=y
        CONFIG_MTK_MAP_R2_VER_SUPPORT=y
        CONFIG_MTK_MAP_R3_VER_SUPPORT=y
        CONFIG_MTK_MAP_R2_6E_SUPPORT=y
        CONFIG_MTK_MAP_R3_6E_SUPPORT=y
        CONFIG_MTK_MBO_SUPPORT=y
        CONFIG_MTK_MBSS_DTIM_SUPPORT=y
        CONFIG_MTK_MBSS_SUPPORT=y
        CONFIG_MTK_MCAST_RATE_SPECIFIC=y
        CONFIG_MTK_MEMORY_SHRINK=y
        CONFIG_MTK_MEMORY_SHRINK_AGGRESS=y
        CONFIG_MTK_MGMT_TXPWR_CTRL=y
        CONFIG_MTK_MLME_MULTI_QUEUE_SUPPORT=y
        CONFIG_MTK_MT_AP_SUPPORT=m
        CONFIG_MTK_MT_DFS_SUPPORT=y
        CONFIG_MTK_MT_MAC=y
        CONFIG_MTK_MT_WIFI=m
        CONFIG_MTK_MT_WIFI_PATH="mt_wifi"
        CONFIG_MTK_MUMIMO_SUPPORT=y
        CONFIG_MTK_MU_RA_SUPPORT=y
        CONFIG_MTK_OFFCHANNEL_SCAN_FEATURE=y
        CONFIG_MTK_OWE_SUPPORT=y
        CONFIG_MTK_QOS_R1_SUPPORT=y
        CONFIG_MTK_RA_PHY_RATE_SUPPORT=y
        CONFIG_MTK_RED_SUPPORT=y
        CONFIG_MTK_RTMP_FLASH_SUPPORT=y
        CONFIG_MTK_RT_FIRST_CARD_EEPROM="flash"
        CONFIG_MTK_RT_FIRST_IF_RF_OFFSET=0xc0000
        CONFIG_MTK_SCS_FW_OFFLOAD=y
        CONFIG_MTK_SECOND_IF_NONE=y
        CONFIG_MTK_SMART_CARRIER_SENSE_SUPPORT=y
        CONFIG_MTK_SPECTRUM_SUPPORT=y
        CONFIG_MTK_SUPPORT_OPENWRT=y
        CONFIG_MTK_THIRD_IF_NONE=y
        CONFIG_MTK_TPC_SUPPORT=y
        CONFIG_MTK_TXBF_SUPPORT=y
        CONFIG_MTK_UAPSD=y
        CONFIG_MTK_VLAN_SUPPORT=y
        CONFIG_MTK_VOW_SUPPORT=y
        CONFIG_MTK_WARP_V2=y
        CONFIG_MTK_WDS_SUPPORT=y
        CONFIG_MTK_WHNAT_SUPPORT=m
        CONFIG_MTK_WIFI_BASIC_FUNC=y
        CONFIG_MTK_WIFI_DRIVER=y
        CONFIG_MTK_WIFI_EAP_FEATURE=y
        CONFIG_MTK_WIFI_FW_BIN_LOAD=y
        CONFIG_MTK_WIFI_MODE_AP=m
        CONFIG_MTK_WIFI_MT_MAC=y
        CONFIG_MTK_WIFI_TWT_SUPPORT=y
        CONFIG_MTK_WLAN_HOOK=y
        CONFIG_MTK_WLAN_SERVICE=y
        CONFIG_MTK_WNM_SUPPORT=y
        CONFIG_MTK_WPA3_SUPPORT=y
        CONFIG_MTK_WSC_INCLUDED=y
        CONFIG_MTK_WSC_V2_SUPPORT=y
        CONFIG_MTK_MT7981_NEW_FW=y
        # CONFIG_PACKAGE_TURBOACC_INCLUDE_FLOW_OFFLOADING is not set
        CONFIG_PACKAGE_TURBOACC_INCLUDE_NO_FASTPATH=y
        CONFIG_PACKAGE_blockd=y
        CONFIG_PACKAGE_ca-certificates=y
        CONFIG_PACKAGE_datconf=y
        CONFIG_PACKAGE_datconf-lua=y
        CONFIG_PACKAGE_ebtables=y
        CONFIG_PACKAGE_ethtool=y
        CONFIG_PACKAGE_htop=y
        CONFIG_PACKAGE_ip-bridge=y
        CONFIG_PACKAGE_iw=y
        CONFIG_PACKAGE_iwinfo=y
        CONFIG_PACKAGE_kmod-ata-core=y
        CONFIG_PACKAGE_kmod-conninfra=y
        CONFIG_PACKAGE_kmod-crypto-acompress=y
        CONFIG_PACKAGE_kmod-crypto-ccm=y
        CONFIG_PACKAGE_kmod-crypto-cmac=y
        CONFIG_PACKAGE_kmod-crypto-crc32c=y
        CONFIG_PACKAGE_kmod-crypto-ctr=y
        CONFIG_PACKAGE_kmod-crypto-des=y
        CONFIG_PACKAGE_kmod-crypto-gcm=y
        CONFIG_PACKAGE_kmod-crypto-gf128=y
        CONFIG_PACKAGE_kmod-crypto-ghash=y
        CONFIG_PACKAGE_kmod-crypto-hmac=y
        CONFIG_PACKAGE_kmod-crypto-md4=y
        CONFIG_PACKAGE_kmod-crypto-md5=y
        CONFIG_PACKAGE_kmod-crypto-rng=y
        CONFIG_PACKAGE_kmod-crypto-seqiv=y
        CONFIG_PACKAGE_kmod-crypto-sha256=y
        CONFIG_PACKAGE_kmod-crypto-sha512=y
        CONFIG_PACKAGE_kmod-ebtables=y
        CONFIG_PACKAGE_kmod-ebtables-ipv4=y
        CONFIG_PACKAGE_kmod-ebtables-ipv6=y
        CONFIG_PACKAGE_kmod-fs-autofs4=y
        CONFIG_PACKAGE_kmod-fs-vfat=y
        CONFIG_PACKAGE_kmod-ifb=y
        CONFIG_PACKAGE_kmod-inet-diag=y
        CONFIG_PACKAGE_kmod-ipt-compat-xtables=y
        CONFIG_PACKAGE_kmod-ipt-conntrack-extra=y
        CONFIG_PACKAGE_kmod-ipt-extra=y
        CONFIG_PACKAGE_kmod-ipt-filter=y
        CONFIG_PACKAGE_kmod-ipt-hashlimit=y
        CONFIG_PACKAGE_kmod-ipt-iface=y
        CONFIG_PACKAGE_kmod-ipt-ipmark=y
        CONFIG_PACKAGE_kmod-ipt-ipopt=y
        CONFIG_PACKAGE_kmod-ipt-iprange=y
        CONFIG_PACKAGE_kmod-ipt-ipv4options=y
        CONFIG_PACKAGE_kmod-ipt-nat-extra=y
        CONFIG_PACKAGE_kmod-ipt-offload=y
        CONFIG_PACKAGE_kmod-ipt-proto=y
        CONFIG_PACKAGE_kmod-ipt-raw6=y
        CONFIG_PACKAGE_kmod-ipt-tee=y
        CONFIG_PACKAGE_kmod-ipt-tproxy=y
        CONFIG_PACKAGE_kmod-ipt-u32=y
        CONFIG_PACKAGE_kmod-lib-crc32c=y
        CONFIG_PACKAGE_kmod-lib-lzo=y
        CONFIG_PACKAGE_kmod-mediatek_hnat=y
        CONFIG_PACKAGE_kmod-mt_wifi=y
        CONFIG_PACKAGE_kmod-nf-flow=y
        CONFIG_PACKAGE_kmod-nls-base=y
        CONFIG_PACKAGE_kmod-nls-cp437=y
        CONFIG_PACKAGE_kmod-nls-iso8859-1=y
        CONFIG_PACKAGE_kmod-nls-utf8=y
        CONFIG_PACKAGE_kmod-scsi-core=y
        ### Kernel Modules
        CONFIG_PACKAGE_kmod-usb-net-rndis=y
        CONFIG_PACKAGE_kmod-usb-net=y
        CONFIG_PACKAGE_kmod-usb-net-cdc-ether=y
        CONFIG_PACKAGE_kmod-tcp-brutal=y
        CONFIG_PACKAGE_kmod-tcp-bbr3=y
        CONFIG_PACKAGE_kmod-ipt-nat6=y
        CONFIG_PACKAGE_kmod-sched-bpf=y
        CONFIG_PACKAGE_kmod-sched-cake=y
        CONFIG_PACKAGE_kmod-sched-core=y
        CONFIG_PACKAGE_kmod-sched=y
        CONFIG_PACKAGE_kmod-tun=y
        CONFIG_PACKAGE_kmod-warp=y
        CONFIG_PACKAGE_kmod-zram=y
        CONFIG_PACKAGE_kmod-netlink-diag=y
        CONFIG_PACKAGE_kmod-nft-tproxy=y
        CONFIG_PACKAGE_kmod-fuse=n
        CONFIG_PACKAGE_kmod-nft-socket=y
        CONFIG_PACKAGE_kmod-sched-bpf=y
        CONFIG_PACKAGE_kmod-xdp-sockets-diag=y
        CONFIG_PACKAGE_kmod-veth=y
        CONFIG_PACKAGE_kmod-fs-ksmbd=y
        CONFIG_PACKAGE_kvcedit=y
        CONFIG_PACKAGE_libatomic=y
        CONFIG_PACKAGE_libblkid=y
        CONFIG_PACKAGE_libcap-ng=y
        CONFIG_PACKAGE_libcbor=y
        CONFIG_PACKAGE_libevdev=y
        CONFIG_PACKAGE_wifi-scripts=y
        CONFIG_PACKAGE_libfido2=y
        CONFIG_PACKAGE_libipset=y
        CONFIG_PACKAGE_libkvcutil=y
        CONFIG_PACKAGE_libncurses=y
        CONFIG_PACKAGE_libnl=y
        CONFIG_PACKAGE_libnl-core=y
        CONFIG_PACKAGE_libnl-genl=y
        CONFIG_PACKAGE_libnl-nf=y
        CONFIG_PACKAGE_libnl-route=y
        CONFIG_PACKAGE_libpcap=y
        CONFIG_PACKAGE_libstdcpp=y
        CONFIG_PACKAGE_libudev-zero=y
        CONFIG_PACKAGE_libuuid=y
        CONFIG_PACKAGE_lua-cjson=y
        CONFIG_PACKAGE_mii_mgr=y
        CONFIG_PACKAGE_mtkhqos_util=y
        CONFIG_PACKAGE_mtk-smp=y
        CONFIG_PACKAGE_nano=y
        CONFIG_PACKAGE_regs=y
        CONFIG_PACKAGE_resolveip=y
        # CONFIG_PACKAGE_swconfig is not set
        CONFIG_PACKAGE_switch=y
        CONFIG_PACKAGE_tc-mod-iptables=y
        CONFIG_PACKAGE_tc-tiny=y
        CONFIG_PACKAGE_tcpdump=y
        CONFIG_PACKAGE_terminfo=y
        CONFIG_PACKAGE_wifi-dats=y
        CONFIG_PACKAGE_mtwifi-cfg=y
        CONFIG_PACKAGE_wireless-regdb=y
        CONFIG_PACKAGE_wireless-tools=y
        CONFIG_PACKAGE_zram-swap=y
        # CONFIG_PKG_CHECK_FORMAT_SECURITY is not set
        # CONFIG_PKG_FORTIFY_SOURCE_1 is not set
        CONFIG_PKG_FORTIFY_SOURCE_2=y
        CONFIG_WARP_CHIPSET="mt7981"
        CONFIG_WARP_DBG_SUPPORT=y
        CONFIG_WARP_VERSION=2
        CONFIG_WED_HW_RRO_SUPPORT=y
        # CONFIG_WOLFSSL_HAS_ECC25519 is not set
        CONFIG_first_card=y
        CONFIG_first_card_name="MT7981"
        # CONFIG_AFALG_FALLBACK is not set
        # CONFIG_MTK_BAND_STEERING is not set
        # CONFIG_MTK_DEFAULT_5G_PROFILE is not set
        # CONFIG_MTK_MAC_REPEATER_SUPPORT is not set
        # CONFIG_MTK_MULTI_PROFILE_SUPPORT is not set
        # CONFIG_MTK_PCIE_ASPM_DYM_CTRL_SUPPORT is not set
        # CONFIG_MTK_PRE_CAL_TRX_SET1_SUPPORT is not set
        # CONFIG_MTK_PRE_CAL_TRX_SET2_SUPPORT is not set
        # CONFIG_MTK_RLM_CAL_CACHE_SUPPORT is not set
        # CONFIG_MTK_SNIFFER_RADIOTAP_SUPPORT is not set
        ### Firewall
        CONFIG_PACKAGE_ip6tables-nft=y
        CONFIG_PACKAGE_ip6tables-mod-nat=y
        CONFIG_PACKAGE_iptables-mod-socket=y
        CONFIG_PACKAGE_iptables-nft=y
        CONFIG_PACKAGE_xtables-nft=y
        # CONFIG_PACKAGE_iptables-legacy is not set
        CONFIG_PACKAGE_ipset=y
        CONFIG_PACKAGE_iptables-mod-conntrack-extra=y
        CONFIG_PACKAGE_iptables-mod-extra=y
        CONFIG_PACKAGE_iptables-mod-filter=y
        CONFIG_PACKAGE_iptables-mod-hashlimit=y
        CONFIG_PACKAGE_iptables-mod-iface=y
        CONFIG_PACKAGE_iptables-mod-ipmark=y
        CONFIG_PACKAGE_iptables-mod-ipopt=y
        CONFIG_PACKAGE_iptables-mod-iprange=y
        CONFIG_PACKAGE_iptables-mod-ipv4options=y
        CONFIG_PACKAGE_iptables-mod-nat-extra=y
        CONFIG_PACKAGE_iptables-mod-proto=y
        CONFIG_PACKAGE_iptables-mod-tee=y
        CONFIG_PACKAGE_iptables-mod-tproxy=y
        CONFIG_PACKAGE_iptables-mod-u32=y
        ### GNU Core Utilities
        CONFIG_PACKAGE_coreutils=y
        CONFIG_PACKAGE_coreutils-cat=y
        CONFIG_PACKAGE_coreutils-chmod=y
        CONFIG_PACKAGE_coreutils-chown=y
        CONFIG_PACKAGE_coreutils-chroot=y
        CONFIG_PACKAGE_coreutils-cp=y
        CONFIG_PACKAGE_coreutils-base64=y
        CONFIG_PACKAGE_coreutils-date=y
        CONFIG_PACKAGE_coreutils-dd=y
        CONFIG_PACKAGE_coreutils-dircolors=y
        CONFIG_PACKAGE_coreutils-ls=y
        CONFIG_PACKAGE_coreutils-mkdir=y
        CONFIG_PACKAGE_coreutils-mv=y
        CONFIG_PACKAGE_coreutils-nproc=y
        CONFIG_PACKAGE_coreutils-rm=y
        CONFIG_PACKAGE_coreutils-sha1sum=y
        CONFIG_PACKAGE_coreutils-sha512sum=y
        CONFIG_PACKAGE_coreutils-sleep=y
        CONFIG_PACKAGE_coreutils-timeout=y
        CONFIG_PACKAGE_coreutils-truncate=y
        CONFIG_PACKAGE_coreutils-nano=y
        CONFIG_TARGET_ROOTFS_PARTSIZE=600
        CONFIG_PACKAGE_cfdisk=y
        CONFIG_PACKAGE_dnsmasq-full=y
        CONFIG_PACKAGE_dnsmasq_full_ipset=y
        # CONFIG_PACKAGE_dnsmasq_full_broken_rtc is not set
        # CONFIG_PACKAGE_dnsmasq is not set
        CONFIG_PACKAGE_luci-app-firewall=y
        CONFIG_PACKAGE_bash=y
        CONFIG_PACKAGE_fuse-utils=y
        CONFIG_PACKAGE_ethtool=y
        CONFIG_PACKAGE_autocore-arm=y
        CONFIG_PACKAGE_automount=y
        CONFIG_PACKAGE_autosamba=y
        CONFIG_PACKAGE_default-settings=y
        CONFIG_PACKAGE_default-settings-chn=y
        ### Luci
        CONFIG_PACKAGE_luci=y
        CONFIG_PACKAGE_luci-lib-base=y
        CONFIG_PACKAGE_luci-lib-ip=y
        CONFIG_PACKAGE_luci-lib-ipkg=y
        CONFIG_PACKAGE_luci-lib-jsonc=y
        CONFIG_PACKAGE_luci-lib-nixio=y
        CONFIG_PACKAGE_luci-nginx=y
        CONFIG_LUCI_LANG_zh_Hans=y
        ### OpenSSL
        CONFIG_OPENSSL_ENGINE=y
        CONFIG_OPENSSL_OPTIMIZE_SPEED=y
        CONFIG_OPENSSL_WITH_ASM=y
        CONFIG_PACKAGE_libopenssl-afalg=y
        CONFIG_PACKAGE_libopenssl-conf=y
        CONFIG_PACKAGE_libopenssl-devcrypto=y
        CONFIG_PACKAGE_libopenssl-legacy=y
        CONFIG_PACKAGE_openssl-util=y
        # CONFIG_PACKAGE_libopenssl-padlock is not set
        # CONFIG_OPENSSL_WITH_ERROR_MESSAGES is not set
        ### nginx
        CONFIG_PACKAGE_nginx-ssl=y
        CONFIG_PACKAGE_nginx-mod-brotli=y
        CONFIG_PACKAGE_nginx-mod-luci=y
        CONFIG_PACKAGE_nginx-mod-rtmp=y
        CONFIG_PACKAGE_nginx-mod-stream=y
        CONFIG_PACKAGE_nginx-mod-ubus=y
        CONFIG_PACKAGE_nginx-mod-zstd=y
        CONFIG_PACKAGE_nginx-ssl-util=y
        CONFIG_NGINX_DAV=y
        CONFIG_NGINX_HTTP_AUTH_BASIC=y
        CONFIG_NGINX_HTTP_QUIC=y
        CONFIG_NGINX_HTTP_REAL_IP=y
        CONFIG_NGINX_HTTP_SUB=y
        CONFIG_NGINX_STREAM_REAL_IP=y
        EOF
        
        sed -i "s/192.168.6.1/${{ github.event.inputs.OP_IP }}/" openwrt/package/base-files/files/bin/config_generate
          
        IFS=' ' read -r -a plugins <<< "${{ github.event.inputs.CUSTOM_PLUGINS }}"
        for plugin in "${plugins[@]}"; do
          echo "CONFIG_PACKAGE_${plugin}=y" >> openwrt/.config
        done    
    
    - name: 下载编译依赖
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
             
    - name: 编译源码
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: 整理文件
      id: organize
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        rm -rf *.buildinfo
        rm -rf profiles.json
        rm -rf *.manifest
        rm -rf *.sha
        rm -rf *bl2.bin
        rm -rf *kernel.bin
        rm -rf sha256sums
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV

    - name: 上传固件到Releases
      uses: softprops/action-gh-release@v2.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ matrix.repo_info.branch }}-${{env.tag}}
        files: ${{ env.FIRMWARE }}/*
        body: |
          ====================固件信息=======================
           源码：${{env.REPO_URL}}
           分支：${{ matrix.repo_info.branch }}
           静态IP：${{ github.event.inputs.OP_IP }}
           插件：${{ github.event.inputs.CUSTOM_PLUGINS }}
           定制作者：${{ github.event.inputs.OP_author }}
           默认密码：无
        
    - name: 清理Releases
      uses: dev-drprasad/delete-older-releases@v0.3.4
      with:
        keep_latest: 2
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}